Sys.getenv("RSTUDIO_PANDOC")
dir()
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = '#>',
fig.path = './figures/'
)
library(dplyr)
library(ggplot2)
library(reshape2)
library(PerformanceAnalytics)
library(gridExtra)
library(stringr)
library(foreach)
library(MASS)
library(andrews)
library(mice)
data <- read.csv('./data/data.csv')
head(data)
removed_cols <- c('new_deaths_smoothed','new_cases_smoothed','new_cases_smoothed_per_million','total_cases_per_million','new_deaths_per_million','new_cases_per_million','total_deaths_per_million','aged_70_older','new_deaths','X')
data_n <- data
for (col in removed_cols) {data_n <- data_n[names(data_n) != col]}
categorical <- c('location','continent','development')
interesting_vars <- c('total_cases','new_cases','total_deaths','stringency_index','population','population_density','median_age','aged_65_older','gdp_per_capita','extreme_poverty','cardiovasc_death_rate','diabetes_prevalence','hospital_beds_per_thousand','life_expectancy','human_development_index')
ggplot(data=data) +
geom_bar(aes(fill=continent, y=continent), show.legend = FALSE)
ggplot(data=data) +
geom_bar(aes(fill=development, y=development), show.legend = FALSE)
ggplot(data=data) +
geom_bar(aes(fill=development ,y=continent))
ggplot(data=data) +
geom_bar(aes(fill=continent, y=development))
plots(dataset=data, col='total_cases',type='boxplot')
plots(dataset=data, col='total_cases',type='hist', density=FALSE, bins = c(80,15,15),xtick_angles=c(0,30,20))
plots(dataset=data, col='new_cases',type='boxplot')
plots(dataset=data, col='new_cases',type='hist', density=FALSE, bins = c(70,13,15),xtick_angles=c(0,30,20))
plots(dataset=data, col='total_deaths',type='boxplot')
plots(dataset=data, col='total_deaths',type='hist', density=FALSE, bins = c(55,15,13),xtick_angles=c(0,30,20))
plots(dataset=data, col='stringency_index',type='boxplot')
plots(dataset=data, col='stringency_index',type='hist', density=TRUE,xtick_angles=c(0,30,20))
plots(dataset=data, col='population',type='boxplot')
plots(dataset=data, col='population',type='hist', density=FALSE, bins = c(60,13,13),xtick_angles=c(0,30,20))
plots <- function(dataset ,col, type, density=TRUE, bins='default', xtick_angles='default') {
var <- dataset %>% dplyr::select(col)
if (bins == 'default') {bins = rep(10,3)}
if (xtick_angles == 'default') {xtick_angles = rep(90,3)}
if (type == 'boxplot') {
p1 <- dataset %>% ggplot(aes(x=var[,1])) +
geom_boxplot() +
ggtitle(str_interp("${col}")) +
theme(axis.title.x=element_blank(),
axis.text.y=element_blank())
p2 <- dataset %>% ggplot(aes(x=var[,1], fill=continent)) +
geom_boxplot() +
ggtitle(str_interp("${col} grouped by continent")) +
theme(axis.title.x=element_blank(),
axis.text.y=element_blank())
p3 <- dataset %>% ggplot(aes(x=var[,1], fill=development)) +
geom_boxplot() +
ggtitle(str_interp("${col} grouped by development")) +
theme(axis.title.x=element_blank(),
axis.text.y=element_blank())
} else if (type == 'hist') {
p1 <- dataset %>% ggplot(aes(x=var[,1])) +
geom_histogram(aes(y=..density..), bins=bins[1]) +
geom_density() +
ggtitle(str_interp("${col}")) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(angle = xtick_angles[1]))
if (density == FALSE) {
p2 <- dataset %>% ggplot(aes(x=var[,1], fill=continent)) +
geom_histogram(show.legend = FALSE,bins=bins[2]) +
ggtitle(str_interp("${col} by continent")) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(angle = xtick_angles[2])) +
facet_wrap(~continent, nrow = 1)
p3 <- dataset %>% ggplot(aes(x=var[,1], fill=development)) +
geom_histogram(show.legend = FALSE,bins=bins[3]) +
ggtitle(str_interp("${col} by development")) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(angle = xtick_angles[3])) +
facet_wrap(~development, nrow = 1)
} else {
p2 <- dataset %>% ggplot(aes(x=var[,1], fill=continent)) +
geom_histogram(show.legend = FALSE,bins=bins[2],aes(y=..density..)) +
geom_density(show.legend = FALSE) +
ggtitle(str_interp("${col} by continent")) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(angle = xtick_angles[2])) +
facet_wrap(~continent, nrow = 1)
p3 <- dataset %>% ggplot(aes(x=var[,1], fill=development)) +
geom_histogram(show.legend = FALSE,bins=bins[3],aes(y=..density..)) +
geom_density(show.legend = FALSE) +
ggtitle(str_interp("${col} by development")) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(angle = xtick_angles[3])) +
facet_wrap(~development, nrow = 1)
}
}
grid.arrange(p1,p2,p3, nrow=3)
}
colors <- function(cat_var, colors_vector) {
kleuren <- as.numeric(as.factor(cat_var))
foreach (i=1:length(kleuren), kleur=kleuren) %do% {
kleuren[i] = colors_vector[kleur]
}
return(kleuren)
}
# setting colors development
color_1 <- "blueviolet"
color_2 <- "brown"
color_3 <- "seagreen"
color_4 <- "yellow3"
color_5 <- "black"
color_6 <- "deeppink1"
palette1 <- c(color_1,color_2,color_3,color_4)
palette2 <- c(color_1,color_2,color_3,color_4,color_5,color_6)
development_colors <- colors(data$development,palette1)
continent_colors <- colors(data$continent,palette2)
pa <- data_n %>% dplyr::select(interesting_vars)
chart.Correlation(pa, histogram=TRUE, pch=19, method="pearson")
pairs(pa,pch=1,col=continent_colors)
pairs(pa,pch=1,col=continent_colors)
pairs(pa,pch=1,col=development_colors)
pa <- data_n %>% dplyr::select(interesting_vars)
chart.Correlation(pa, histogram=TRUE, pch=19, method="pearson")
install.packages("randomcoloR")
install.packages("V8")
install.packages('Stat2Data')
library(Stat2Data)
library(Stat2Data)
library(Stat2Data)
head(CancerSurvival)
head(Stat2Data::CancerSurvival)
help(Stat2Data)
CancerSurvival
CanadianDrugs
AutoPollution
Stat2Data-package
library(Stat2Data)
CancerSurvival
Caterpillars
library(Stat2Data)
library(Stat2Data)
library(Stat2Data)
library(Stat2Data)
library(Stat2Data)
library(Stat2Data)
library(Stat2Data)
?Stat2Data
install.packages('Stat2Data')
install.packages("Stat2Data")
library(Stat2Data)
CancerSurvival
CancerSurvival
Stat2Data::cancersurvival
library(datasets)
install.packages('stat2data')
data('./CancerSurvival.rda')
setwd('/home/dreth/.local/share/Cryptomator/mnt/Onedrive/UC3M/courses/data tidying and reporting/UC3MDataTidyingAndReporting/Lecture4/Assignment1-Rpres')
data('./CancerSurvival.rda')
LS
ls
ls()
dir
dir()
data('./CancerSurvival.rda')
data('./CancerSurvival.rda')
dir()
data('CancerSurvival.rda')
data('CancerSurvival.rda')
dir()
data('CancerSurvival')
head(cancer)
```{r}
cancer <- data('CancerSurvival')
head(cancer)
cancer
cancer
View(CancerSurvival)
cancer <- data.frame(data('CancerSurvival'))
head(cancer)
head(CancerSurvival)
data('CancerSurvival')
head(CancerSurvival)
knitr::kable(
head(CancerSurvival),
booktabs=TRUE,
caption="Genetic data",
)
CancerSurvival
aggregate(x = CancerSurvival$Survival,
by = list(CancerSurvival$Organ),
FUN = mean)
aggregate(x = CancerSurvival$Survival,
by = list(CancerSurvival$Organ),
FUN = mean)
barplot(agg)
?barplot
barplot(data=agg)
agg <- aggregate(x = CancerSurvival$Survival,
by = list(CancerSurvival$Organ),
FUN = mean)
names(agg) <- c("Organ", "Survival")
agg
barplot(data=agg$Survival)
barplot(data=names)
barplot(names)
barplot(surv)
surv <- agg$Survival
names(surv) <- agg$Organ
barplot(surv)
barplot(surv, horiz=TRUE)
count
table(CancerSurvival)
table(CancerSurvival$Organ)
install.packages('plotly')
library(plotly)
fig <- plot_ly(y=CancerSurvival %>% filter(Organ=="Bronchus"), type = "box")
fig
CancerSurvival %>% filter(Organ=="Bronchus")
CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival)
CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival)
CancerSurvival$Survival
vector(CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival))
CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival) %>% as.matrix
CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival) %>% as.vector
CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival) %>% unlist(use.names = FALSE)
fig <- plot_ly(y=CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival) %>% unlist(use.names = FALSE), type = "box")
fig
fig <- plot_ly(y=CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival) %>% unlist(use.names = FALSE), type = "box") %>% add_trace(y=CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival) %>% unlist(use.names = FALSE))
unique(CancerSurvival$Organ)
fig <- plot_ly(y=CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival) %>% unlist(use.names = FALSE), type = "box") %>% add_trace(y=CancerSurvival %>% filter(Organ=="Stomach") %>% select(Survival) %>% unlist(use.names = FALSE))
fig
library(plotly)
fig <- plot_ly(y=CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival) %>% unlist(use.names = FALSE), type = "box", name="Bronchus")
fig <- fig %>% add_trace(y=CancerSurvival %>% filter(Organ=="Stomach") %>% select(Survival) %>% unlist(use.names = FALSE), name="Stomach"))
fig
fig <- fig %>% add_trace(y=CancerSurvival %>% filter(Organ=="Stomach") %>% select(Survival) %>% unlist(use.names = FALSE), name="Stomach"))
fig
fig <- fig %>% add_trace(y=CancerSurvival %>% filter(Organ=="Stomach") %>% select(Survival) %>% unlist(use.names = FALSE), name="Stomach")
fig
fig
```{r, echo=FALSE}
library(plotly)
fig <- plot_ly(y=CancerSurvival %>% filter(Organ=="Bronchus") %>% select(Survival) %>% unlist(use.names = FALSE), type = "box", name="Bronchus")
fig <- fig %>% add_trace(y=CancerSurvival %>% filter(Organ=="Stomach") %>% select(Survival) %>% unlist(use.names = FALSE), name="Stomach")
fig <- fig %>% add_trace(y=CancerSurvival %>% filter(Organ=="Colon") %>% select(Survival) %>% unlist(use.names = FALSE), name="Colon")
fig <- fig %>% add_trace(y=CancerSurvival %>% filter(Organ=="Ovary") %>% select(Survival) %>% unlist(use.names = FALSE), name="Ovary")
fig <- fig %>% add_trace(y=CancerSurvival %>% filter(Organ=="Breast") %>% select(Survival) %>% unlist(use.names = FALSE), name="Breast")
fig
